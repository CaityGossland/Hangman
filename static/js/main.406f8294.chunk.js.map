{"version":3,"sources":["components/Header.js","components/Figure.js","components/WrongLetters.js","components/Word.js","helpers/helpers.js","components/Popup.js","components/Notification.js","App.js","index.js"],"names":["Header","react_default","a","createElement","Fragment","className","Figure","_ref","errors","wrongLetters","length","height","width","x1","y1","x2","y2","cx","cy","r","WrongLetters","map","letter","i","key","reduce","prev","curr","Word","selectedWord","correctLetters","split","includes","showNotification","setter","setTimeout","Popup","setPlayable","playAgain","finalMessage","finalMessageRevealWord","playable","game_result","correct","wrong","word","status","forEach","checkWin","concat","useEffect","style","display","onClick","Notification","words","Math","floor","random","App","_useState","useState","_useState2","Object","slicedToArray","_useState3","_useState4","setCorrectLetters","_useState5","_useState6","setWrongLetters","_useState7","_useState8","setShowNotification","handleKeydown","event","keyCode","toLowerCase","show","toConsumableArray","window","addEventListener","removeEventListener","components_Header","components_Figure","components_WrongLetters","components_Word","components_Popup","components_Notification","ReactDOM","render","StrictMode","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.406f8294.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Header = () => {\n  return (\n    <>\n      <h1 className=\"header\">HANGMAN</h1>\n      <p className=\"description\">Find the Hidden Word - Enter a Letter</p>\n    </>\n  );\n};\n\nexport default Header;\n","import React from \"react\";\n\nconst Figure = ({ wrongLetters }) => {\n  const errors = wrongLetters.length;\n  return (\n    <svg height=\"250\" width=\"200\" className=\"figure-container\">\n      {/* <!-- Rod --> */}\n      <line x1=\"60\" y1=\"20\" x2=\"140\" y2=\"20\" />\n      <line x1=\"140\" y1=\"20\" x2=\"140\" y2=\"50\" />\n      <line x1=\"60\" y1=\"20\" x2=\"60\" y2=\"230\" />\n      <line x1=\"20\" y1=\"230\" x2=\"100\" y2=\"230\" />\n\n      {/* <!-- Head --> */}\n      {errors > 0 && <circle cx=\"140\" cy=\"70\" r=\"20\" />}\n      {/* <!-- Body --> */}\n      {errors > 1 && <line x1=\"140\" y1=\"90\" x2=\"140\" y2=\"150\" />}\n      {/* <!-- Arms --> */}\n      {errors > 2 && <line x1=\"140\" y1=\"120\" x2=\"120\" y2=\"100\" />}\n      {errors > 3 && <line x1=\"140\" y1=\"120\" x2=\"160\" y2=\"100\" />}\n      {/* <!-- Legs --> */}\n      {errors > 4 && <line x1=\"140\" y1=\"150\" x2=\"120\" y2=\"180\" />}\n      {errors > 5 && <line x1=\"140\" y1=\"150\" x2=\"160\" y2=\"180\" />}\n    </svg>\n  );\n};\n\nexport default Figure;\n","import React from \"react\";\n\nconst WrongLetters = ({ wrongLetters }) => {\n  return (\n    <div className=\"wrong-letters-container\">\n      <div>\n        {wrongLetters.length > 0 && <p>Wrong</p>}\n        {wrongLetters\n          .map((letter, i) => <span key={i}>{letter}</span>)\n          .reduce(\n            (prev, curr) => (prev === null ? [curr] : [prev, \", \", curr]),\n            null\n          )}\n      </div>\n    </div>\n  );\n};\n\nexport default WrongLetters;\n","import React from \"react\";\n\nconst Word = ({ selectedWord, correctLetters }) => {\n  return (\n    <div className=\"word\">\n      {selectedWord.split(\"\").map((letter, i) => {\n        return (\n          <span className=\"letter\" key={i}>\n            {correctLetters.includes(letter) ? letter : \"\"}\n          </span>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Word;\n","export function showNotification(setter) {\n  setter(true);\n  setTimeout(() => {\n    setter(false);\n  }, 2000);\n}\n\nexport function checkWin(correct, wrong, word) {\n  let status = \"win\";\n\n  // Check if game is not done\n  word.split(\"\").forEach((letter) => {\n    if (!correct.includes(letter)) {\n      status = \"\";\n    }\n  });\n\n  // Check for loss\n  if (wrong.length === 6) {\n    status = \"lose\";\n  }\n  return status;\n}\n","import React, { useEffect } from \"react\";\nimport { checkWin } from \"../helpers/helpers\";\n\nconst Popup = ({\n  correctLetters,\n  wrongLetters,\n  selectedWord,\n  setPlayable,\n  playAgain,\n}) => {\n  let finalMessage = \"\";\n  let finalMessageRevealWord = \"\";\n  let playable = true;\n\n  let game_result = checkWin(correctLetters, wrongLetters, selectedWord);\n  if (game_result === \"win\") {\n    finalMessage = \"Congratulations! You won! :)\";\n    playable = false;\n  } else if (game_result === \"lose\") {\n    finalMessage = \"Unfortunately you lost :(\";\n    finalMessageRevealWord = `...the word was: ${selectedWord}`;\n    playable = false;\n  }\n\n  useEffect(() => setPlayable(playable));\n\n  return (\n    <div\n      className=\"popup-container\"\n      style={finalMessage !== \"\" ? { display: \"flex\" } : {}}\n    >\n      <div className=\"popup\">\n        <h2>{finalMessage}</h2>\n        <h3>{finalMessageRevealWord}</h3>\n        <button onClick={playAgain}>Play Again</button>\n      </div>\n    </div>\n  );\n};\n\nexport default Popup;\n","import React from \"react\";\n\nconst Notification = ({ showNotification }) => {\n  return (\n    <div className={`notification-container ${showNotification ? \"show\" : \"\"}`}>\n      <p>You have already entered this letter</p>\n    </div>\n  );\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Header from \"./components/Header\";\nimport Figure from \"./components/Figure\";\nimport WrongLetters from \"./components/WrongLetters\";\nimport Word from \"./components/Word\";\nimport Popup from \"./components/Popup\";\nimport Notification from \"./components/Notification\";\nimport \"./App.css\";\nimport { showNotification as show } from \"./helpers/helpers\";\n\nconst words = [\"application\", \"programming\", \"interface\", \"wizard\"];\nlet selectedWord = words[Math.floor(Math.random() * words.length)];\n\nfunction App() {\n  const [playable, setPlayable] = useState(true);\n  const [correctLetters, setCorrectLetters] = useState([]);\n  const [wrongLetters, setWrongLetters] = useState([]);\n  const [showNotification, setShowNotification] = useState(false);\n\n  useEffect(() => {\n    const handleKeydown = (event) => {\n      const { key, keyCode } = event;\n      if (playable && keyCode >= 65 && keyCode <= 90) {\n        const letter = key.toLowerCase();\n\n        if (selectedWord.includes(letter)) {\n          if (!correctLetters.includes(letter)) {\n            setCorrectLetters((correctLetters) => [...correctLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        } else {\n          if (!wrongLetters.includes(letter)) {\n            setWrongLetters((wrongLetters) => [...wrongLetters, letter]);\n          } else {\n            show(setShowNotification);\n          }\n        }\n      }\n    };\n    window.addEventListener(\"keydown\", handleKeydown);\n\n    return () => window.removeEventListener(\"keydown\", handleKeydown);\n  }, [correctLetters, wrongLetters, playable]);\n\n  function playAgain() {\n    setPlayable(true);\n\n    // Empty arrays\n    setCorrectLetters([]);\n    setWrongLetters([]);\n    selectedWord = words[Math.floor(Math.random() * words.length)];\n  }\n  return (\n    <>\n      <Header />\n      <div className=\"game-container\">\n        <Figure wrongLetters={wrongLetters} />\n        <WrongLetters wrongLetters={wrongLetters} />\n        <Word selectedWord={selectedWord} correctLetters={correctLetters} />\n      </div>\n      <Popup\n        correctLetters={correctLetters}\n        wrongLetters={wrongLetters}\n        selectedWord={selectedWord}\n        setPlayable={setPlayable}\n        playAgain={playAgain}\n      />\n      <Notification showNotification={showNotification} />\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}